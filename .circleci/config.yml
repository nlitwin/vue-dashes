version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: 'circleci/node:latest'

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          command: |
            # Decrypt the git_deploy_key.enc key into /tmp/git_deploy_key
            openssl aes-256-cbc -d -K $REPO_ENC_KEY -iv $REPO_ENC_IV -in git_deploy_key.enc -out /tmp/git_deploy_key
            # Make sure only the current user can read the private key
            chmod 600 /tmp/git_deploy_key
            # Create a script to return the passphrase environment variable to ssh-add
            echo 'echo ${SSL_PASSPHRASE}' > /tmp/askpass && chmod +x /tmp/askpass
            # Start the authentication agent
            eval "$(ssh-agent -s)"
            # Add the key to the authentication agent
            DISPLAY=":0.0" SSH_ASKPASS="/tmp/askpass" setsid ssh-add /tmp/git_deploy_key </dev/null
      - restore_cache:
          keys:
            - v2-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-deps-{{ .Branch }}-
            - v2-deps-
      - run:
          name: Install npm packages
          command: npm ci
      - save_cache:
          key: v2-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - run:
          name: Run linting
          command: npm run lint
      - run:
          name: Run unit tests
          command: npm test
      - run:
          name: Build the project
          command: npm run build
      - persist_to_workspace:
          root: ~/repo
          paths: .

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Release
          command: npm run semantic-release || true

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
